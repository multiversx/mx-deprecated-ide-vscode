{
	"name": "vscode-elrond-ide",
	"displayName": "MultiversX IDE",
	"description": "MultiversX IDE for developing Smart Contracts",
	"version": "0.19.0",
	"publisher": "Elrond",
	"repository": {
		"type": "git",
		"url": "https://github.com/multiversx/mx-ide-vscode.git"
	},
	"engines": {
		"vscode": "^1.76.2"
	},
	"enabledApiProposals": [
		"inlineCompletionsAdditions"
	],
	"categories": [
		"Programming Languages",
		"Extension Packs",
		"Debuggers",
		"Other"
	],
	"icon": "content/logo.png",
	"activationEvents": [
		"workspaceContains:**/multiversx.workspace.json"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "multiversx.setupWorkspace",
				"title": "Setup Workspace",
				"category": "multiversx"
			},
			{
				"command": "multiversx.installSdk",
				"title": "Install SDK",
				"category": "multiversx"
			},
			{
				"command": "multiversx.installSdkModule",
				"title": "Install Module or Dependency",
				"category": "multiversx"
			},
			{
				"command": "multiversx.installRustDebuggerPrettyPrinterScript",
				"title": "Install the rust debugger pretty printer script",
				"category": "multiversx"
			},
			{
				"command": "multiversx.refreshTemplates",
				"title": "Refresh",
				"category": "multiversx",
				"icon": {
					"light": "content/light/refresh.svg",
					"dark": "content/dark/refresh.svg"
				}
			},
			{
				"command": "multiversx.newFromTemplate",
				"title": "New Contract",
				"category": "multiversx"
			},
			{
				"command": "multiversx.refreshContracts",
				"title": "Refresh",
				"category": "multiversx",
				"icon": {
					"light": "content/light/refresh.svg",
					"dark": "content/dark/refresh.svg"
				}
			},
			{
				"command": "multiversx.buildContract",
				"title": "Build Contract",
				"category": "multiversx"
			},
			{
				"command": "multiversx.cleanContract",
				"title": "Clean Contract",
				"category": "multiversx"
			},
			{
				"command": "multiversx.runScenarios",
				"title": "Run Scenarios",
				"category": "multiversx"
			},
			{
				"command": "multiversx.gotoContract",
				"title": "Show in Workspace Explorer",
				"category": "multiversx"
			},
			{
				"command": "multiversx.runFreshTestnet",
				"title": "Start Fresh Testnet",
				"category": "multiversx"
			},
			{
				"command": "multiversx.resumeExistingTestnet",
				"title": "Resume Testnet",
				"category": "multiversx"
			},
			{
				"command": "multiversx.stopTestnet",
				"title": "Stop Testnet",
				"category": "multiversx"
			},
			{
				"command": "multiversx.botAskQuestion",
				"title": "xBot, please help",
				"category": "multiversx"
			},
			{
				"command": "multiversx.botExplainCode",
				"title": "xBot, explain code",
				"category": "multiversx"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "multiversx.buildContract",
					"when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
					"group": "multiversx"
				},
				{
					"command": "multiversx.buildContract",
					"when": "resourceFilename == multiversx.json",
					"group": "multiversx"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
					"group": "multiversx"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "resourceFilename == multiversx.json",
					"group": "multiversx"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "resourceFilename =~ /.scen.json/",
					"group": "multiversx"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
					"group": "multiversx"
				},
				{
					"command": "multiversx.runFreshTestnet",
					"when": "resourceFilename == testnet.toml",
					"group": "multiversx Testnet"
				},
				{
					"command": "multiversx.resumeExistingTestnet",
					"when": "resourceFilename == testnet.toml",
					"group": "multiversx Testnet"
				},
				{
					"command": "multiversx.stopTestnet",
					"when": "resourceFilename == testnet.toml",
					"group": "multiversx Testnet"
				}
			],
			"commandPalette": [
				{
					"command": "multiversx.refreshContracts",
					"when": "false"
				},
				{
					"command": "multiversx.refreshTemplates",
					"when": "false"
				},
				{
					"command": "multiversx.newFromTemplate",
					"when": "false"
				},
				{
					"command": "multiversx.buildContract",
					"when": "false"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "false"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "false"
				},
				{
					"command": "multiversx.gotoContract",
					"when": "false"
				},
				{
					"command": "multiversx.runFreshTestnet",
					"when": "false"
				},
				{
					"command": "multiversx.resumeExistingTestnet",
					"when": "false"
				},
				{
					"command": "multiversx.stopTestnet",
					"when": "false"
				}
			],
			"editor/context": [
				{
					"when": "resourceLangId == rust",
					"command": "multiversx.botAskQuestion",
					"group": "multiversx xBot"
				},
				{
					"when": "resourceLangId == rust",
					"command": "multiversx.botExplainCode",
					"group": "multiversx xBot"
				}
			],
			"view/title": [
				{
					"command": "multiversx.refreshTemplates",
					"when": "view == contractTemplates",
					"group": "navigation"
				},
				{
					"command": "multiversx.refreshContracts",
					"when": "view == smartContracts",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "multiversx.buildContract",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.gotoContract",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.newFromTemplate",
					"when": "view == contractTemplates",
					"group": "inline"
				}
			]
		},
		"configuration": {
			"title": "vscode-elrond-ide",
			"properties": {
				"multiversx.sdkPath": {
					"type": "string",
					"default": "~/multiversx-sdk"
				},
				"multiversx.assistantApiUrl": {
					"type": "string",
					"default": ""
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "multiversx",
					"title": "MultiversX Workspace Explorer",
					"icon": "content/logo-monochrome.png"
				}
			]
		},
		"views": {
			"multiversx": [
				{
					"id": "multiversx.welcome",
					"name": "Welcome",
					"contextualTitle": "Welcome",
					"type": "webview"
				},
				{
					"id": "multiversx.assistant",
					"name": "Assistant",
					"contextualTitle": "Assistant",
					"type": "webview"
				},
				{
					"id": "smartContracts",
					"name": "Smart Contracts",
					"contextualTitle": "Smart Contracts in Workspace"
				},
				{
					"id": "contractTemplates",
					"name": "Templates",
					"contextualTitle": "Smart Contract Templates"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "contractTemplates",
				"contents": "Hit the refresh button to fetch or update the available Smart Contract templates."
			},
			{
				"view": "smartContracts",
				"contents": "Hit the refresh button to update the list of Smart Contracts within your workspace."
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test": "node ./out/test/runTest.js",
		"unit-tests": "mocha",
		"lint": "eslint src --ext ts"
	},
	"devDependencies": {
		"@types/chai": "4.2.11",
		"@types/glob": "^7.1.3",
		"@types/mocha": "9.1.0",
		"@types/node": "13.13.2",
		"@types/underscore": "^1.10.1",
		"@types/vscode": "^1.76.0",
		"@typescript-eslint/eslint-plugin": "^5.56.0",
		"@typescript-eslint/parser": "^5.56.0",
		"@vscode/webview-ui-toolkit": "1.2.2",
		"axios": "0.24.0",
		"chai": "4.2.0",
		"eslint": "^8.36.0",
		"glob": "8.1.0",
		"html-loader": "^4.2.0",
		"mocha": "9.2.2",
		"semver": "7.3.8",
		"ts-loader": "^9.4.2",
		"ts-node": "9.1.1",
		"typescript": "^4.4.4",
		"underscore": "1.12.1",
		"vsce": "2.6.7",
		"webpack": "^5.76.3",
		"webpack-cli": "^5.0.1"
	},
	"extensionDependencies": []
}
